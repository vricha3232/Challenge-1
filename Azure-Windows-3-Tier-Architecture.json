{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": 
  {
    "adminUsername": 
    {
      "type": "string",
      "metadata": 
      {
        "description": "Username for the Virtual Machines"
      }
    },
    "webTierVmCount": 
    {
      "defaultValue": 2,
      "type": "int",
      "metadata": 
      {
        "description": "Number of Web servers to be deployed"
      }
    },
    "appTierVmCount": 
    {
      "defaultValue": 2,
      "type": "int",
      "metadata": 
      {
        "description": "Number of App servers to be deployed"
      }
    },
    "databaseTierVmCount": 
    {
      "defaultValue": 2,
      "type": "int",
      "metadata": 
      {
        "description": "Number of Database servers to be deployed"
      }
    },
    "remoteAllowedCIDR": 
    {
      "type": "string",
      "minLength": 7,
      "defaultValue": "0.0.0.0/0",
      "metadata": 
      {
        "description": "Enter Public IP CIDR to allow for accessing the deployment.Enter in 0.0.0.0/0 format, you can always modify these later in NSG Settings"
      }
    },
    "location": 
    {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": 
      {
        "description": "Location for all resources."
      }
    },
    "adminPassword": 
    {
      "type": "securestring",
      "metadata": 
      {
        "description": "Specifies the virtual machine administrator password."
      }
    }
  },
  "variables": 
  {
    "vmSize": "Standard_D2_v2",
    "vmStorageAccountType": "Standard_LRS",
    "vmStorageAccountName": "[concat(uniqueString(resourceGroup().id),'storage')]",
    "diagStorageAccountName": "[concat(uniqueString(resourceGroup().id),'diagstorage')]",
    "virtualNetworkName": "VM-vnet",
    "webTierSubnetName": "WebTier-subnet",
    "appTierSubnetName": "AppTier-subnet",
    "databaseTierSubnetName": "DBTier-subnet",
    "webNSGName": "WebTier-nsg",
    "appNSGName": "AppTier-nsg",
    "databaseNSGName": "DBTier-nsg",
    "webLoadBalancerName": "Web-lb",
    "weblbIPAddressName": "web-lb-pip",
    "weblbDnsLabel": "[concat('weblb',uniqueString(resourceGroup().id))]",
    "webLoadBalancerIPID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('weblbIPAddressName'))]",
    "webFrontEndIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('webLoadBalancerName'),'loadBalancerFrontEnd')]",
    "weblbBackendPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('webLoadBalancerName'),'loadBalancerBackend')]",
    "weblbProbeHttpID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('webLoadBalancerName'),'weblbProbeHttp')]",
    "weblbProbeHttpsID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('webLoadBalancerName'),'weblbProbeHttps')]",
    "internalLoadBalancerName": "internal-lb",
    "internalFrontEndIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations',variables('internalLoadBalancerName'),'loadBalancerFrontEnd')]",
    "internallbBackendPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('internalLoadBalancerName'),'loadBalancerBackend')]",
    "internallbProbeSSHID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('internalLoadBalancerName'),'internallbProbeSSH')]",
    "availSetName": "avail-set-",
    "webTierVmNicName": "[concat(variables('webTierVmName'), '-nic-')]",
    "appTierVmNicName": "[concat(variables('appTierVmName'), '-nic-')]",
    "databaseTierVmNicName": "[concat(variables('databaseTierVmName'), '-nic-')]",
    "Publisher": "MicrosoftWindowsServer",
    "Offer": "WindowsServer",
    "windowssku": "2016-Datacenter",
    "version": "latest",
    "webTierVmName": "WebTier-vm",
    "appTierVmName": "AppTier-vm",
    "databaseTierVmName": "DBTier-vm"
  },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(variables('vmStorageAccountName'), copyindex(1))]",
            "apiVersion": "2016-01-01",
            "location": "[parameters('location')]",
            "comments": "4 Storage accounts used to store the VM disks for each tier",
          "copy": 
          {
            "name": "vmStorageAccountLoop",
            "count": 3
          },
          "sku": 
          {
            "name": "[variables('vmStorageAccountType')]"
          },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagStorageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[parameters('location')]",
            "comments": "Storage account used to store the diagnostics data",
          "sku": 
          {
            "name": "Standard_LRS"
          },
            "kind": "Storage"
            
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('webNSGName')]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "NSG for Web Subnet. Rules for allowing HTTP and HTTPS requests from internet are created",
          "properties": 
          {
            "securityRules": [
              {
                "name": "HTTP-allow",
                "properties": 
                {
                  "protocol": "Tcp",
                  "sourcePortRange": "*",
                  "destinationPortRange": "80",
                  "sourceAddressPrefix": "[parameters('remoteAllowedCIDR')]",
                  "destinationAddressPrefix": "10.0.1.0/24",
                  "access": "Allow",
                  "priority": 110,
                  "direction": "Inbound"
                }
              },
              {
                "name": "HTTPS-allow",
                "properties": 
                {
                  "protocol": "Tcp",
                  "sourcePortRange": "*",
                  "destinationPortRange": "443",
                  "sourceAddressPrefix": "[parameters('remoteAllowedCIDR')]",
                  "destinationAddressPrefix": "10.0.1.0/24",
                  "access": "Allow",
                  "priority": 120,
                  "direction": "Inbound"
                }
              }
            ]
          }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('appNSGName')]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "NSG for App Subnet. By default, intra Vnet traffic is allowed and requests from internet are denied",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('databaseNSGName')]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "NSG for Database Subnet. By default, intra Vnet traffic is allowed and requests from internet are denied",
          "properties": 
          {
            "securityRules": []
          }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('weblbIPAddressName')]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "Public IP used by the Web Server Load Balancer",
            "tags": {
                "displayName": "Web LB Public IP"
            },
          "properties": 
          {
            "publicIPAllocationMethod": "Static",
            "idleTimeoutInMinutes": 4,
            "dnsSettings": 
            {
              "domainNameLabel": "[variables('weblbDnsLabel')]"
            }
          }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "Virtual network for overall solution",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('webNSGName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('appNSGName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('databaseNSGName'))]"
            ],
          "properties": 
          {
            "addressSpace": 
            {
              "addressPrefixes": 
              [
                "10.0.0.0/16"
              ]
            },
            "subnets": 
            [
              {
                "name": "[variables('webTierSubnetName')]",
                "properties": 
                {
                  "addressPrefix": "10.0.1.0/24",
                  "networkSecurityGroup": 
                  {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('webNSGName'))]"
                  }
                }
              },
              {
                "name": "[variables('appTierSubnetName')]",
                "properties": 
                {
                  "addressPrefix": "10.0.2.0/24",
                  "networkSecurityGroup": 
                  {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('appNSGName'))]"
                  }
                }
              },
              {
                "name": "[variables('databaseTierSubnetName')]",
                "properties": 
                {
                  "addressPrefix": "10.0.3.0/24",
                  "networkSecurityGroup": 
                  {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('databaseNSGName'))]"
                  }
                }
              }
            ]
          }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat(variables('availSetName'), copyindex(1))]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "comments": "These are the Availability Sets for Web VMs, App VMs and Database VMs",
          "copy": 
          {
            "name": "availSetLoop",
            "count": 3
          },
          "sku": 
          {
            "name": "Aligned"
          },
          "properties": 
          {
            "platformFaultDomainCount": 2,
            "platformUpdateDomainCount": 5
          }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('webLoadBalancerName')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "comments": "This Load Balancer is used to load balance Web traffic among Web Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('weblbIPAddressName'))]"
          ],
          "properties": 
          {
            "frontendIPConfigurations": 
            [
              {
                "name": "loadBalancerFrontEnd",
                "properties": 
                {
                  "publicIPAddress":
                  {
                    "id": "[variables('webLoadBalancerIPID')]"
                  }
                }
              }
            ],
            "backendAddressPools": 
            [
              {
                "name": "loadBalancerBackend"
              }
            ],
            "loadBalancingRules": 
            [
              {
                "name": "LBRuleForlb80IP",
                "properties": 
                {
                  "frontendIPConfiguration": 
                  {
                    "id": "[variables('webFrontEndIPConfigID')]"
                  },
                  "backendAddressPool": 
                  {
                    "id": "[variables('weblbBackendPoolID')]"
                  },
                  "protocol": "Tcp",
                  "frontendPort": 80,
                  "backendPort": 80,
                  "idleTimeoutInMinutes": 5,
                  "enableFloatingIP": false,
                  "probe": 
                  {
                    "id": "[variables('weblbProbeHttpID')]"
                  }
                }
              },
              {
                "name": "LBRuleForlb443IP",
                "properties": 
                {
                  "frontendIPConfiguration": 
                  {
                    "id": "[variables('webFrontEndIPConfigID')]"
                  },
                  "backendAddressPool": 
                  {
                    "id": "[variables('weblbBackendPoolID')]"
                  },
                  "protocol": "Tcp",
                  "frontendPort": 443,
                  "backendPort": 443,
                  "idleTimeoutInMinutes": 5,
                  "enableFloatingIP": false,
                  "probe": 
                  {
                    "id": "[variables('weblbProbeHttpsID')]"
                  }
                }
              }
            ],
            "probes": 
            [
              {
                "name": "weblbProbeHttp",
                "properties": 
                {
                  "protocol": "Tcp",
                  "port": 80,
                  "intervalInSeconds": 5,
                  "numberOfProbes": 2
                }
              },
              {
                "name": "weblbProbeHttps",
                "properties": 
                {
                  "protocol": "Tcp",
                  "port": 443,
                  "intervalInSeconds": 5,
                  "numberOfProbes": 2
                }
              }
            ]
          }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('internalLoadBalancerName')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "comments": "This Internal Load Balancer is used to load balance traffic from Web VM's to Bussiness Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
          ],
          "properties": 
          {
            "frontendIPConfigurations": 
            [
              {
                "name": "loadBalancerFrontEnd",
                "properties": 
                {
                  "subnet": 
                  {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('webTierSubnetName'))]"
                  }
                }
              }
            ],
            "backendAddressPools": 
            [
              {
                "name": "loadBalancerBackEnd"
              }
            ],
            "loadBalancingRules": 
            [
              {
                "name": "internallbruleSSH",
                "properties": 
                {
                  "frontendIPConfiguration": 
                  {
                    "id": "[variables('internalFrontEndIPConfigID')]"
                  },
                  "backendAddressPool": 
                  {
                    "id": "[variables('internallbBackendPoolID')]"
                  },
                  "probe": 
                  {
                    "id": "[variables('internallbProbeSSHID')]"
                  },
                  "protocol": "Tcp",
                  "frontendPort": 22,
                  "backendPort": 22,
                  "idleTimeoutInMinutes": 15
                }
              }
            ],
            "probes": [
              {
                "name": "internallbProbeSSH",
                "properties": 
                {
                  "protocol": "Tcp",
                  "port": 22,
                  "intervalInSeconds": 15,
                  "numberOfProbes": 2
                }
              }
            ]
          }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('webTierVmNicName'), copyindex(1))]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "NICs for Web Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
            "[concat('Microsoft.Network/loadBalancers/', variables('webLoadBalancerName'))]"
          ],
          "copy": 
          {
            "name": "WebTierNicLoop",
            "count": "[parameters('webTierVmCount')]"
          },
          "properties": 
          {
            "ipConfigurations": 
            [
              {
                "name": "ipconfig1",
                "properties": 
                {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": 
                  {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('webTierSubnetName'))]"
                  },
                  "loadBalancerBackendAddressPools": 
                  [
                    {
                      "id": "[variables('weblbBackendPoolID')]"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('appTierVmNicName'), copyindex(1))]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "NICs for App Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
            "[concat('Microsoft.Network/loadBalancers/', variables('internalLoadBalancerName'))]"
          ],
          "copy": 
          {
            "name": "AppTierNicLoop",
            "count": "[parameters('appTierVmCount')]"
          },
          "properties": 
          {
            "ipConfigurations": 
            [
              {
                "name": "ipconfig1",
                "properties": 
                {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": 
                  {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('appTierSubnetName'))]"
                  },
                  "loadBalancerBackendAddressPools": 
                  [
                    {
                      "id": "[variables('internallbBackendPoolID')]"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('databaseTierVmNicName'), copyindex(1))]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "comments": "NICs for Database Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
          ],
          "copy": 
          {
            "name": "DatabaseTierNicLoop",
            "count": "[parameters('databaseTierVmCount')]"
          },
          "properties": 
          {
            "ipConfigurations": 
            [
              {
                "name": "ipconfig1",
                "properties": 
                {
                  "privateIPAllocationMethod": "Dynamic",
                  "subnet": 
                  {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('databaseTierSubnetName'))]"
                  }
                }
              }
            ]
          }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('webTierVmName'),'-', copyindex(1))]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "comments": " Web Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'),'1')]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('webTierVmNicName'), copyindex(1))]",
            "[concat('Microsoft.Compute/availabilitySets/', variables('availSetName'),'1')]"
          ],
          "copy": 
          {
            "name": "WebTierVMLoop",
            "count": "[parameters('webTierVmCount')]"
          },
          "properties": 
          {
            "availabilitySet": 
            {
              "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(variables('availSetName'),'1'))]"
            },
            "hardwareProfile": 
            {
              "vmSize": "[variables('vmSize')]"
            },
            "osProfile": 
            {
              "computerName": "[concat('webserver',copyindex(1))]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]",
              "windowsConfiguration": 
              {
                "enableAutomaticUpdates": true,
                "provisionVmAgent": true
              }
            },
            "storageProfile": 
            {
              "imageReference": 
              {
                "publisher": "[variables('Publisher')]",
                "offer": "[variables('Offer')]",
                "sku": "[variables('windowssku')]",
                "version": "latest"
              },
              "osDisk": 
              {
                "name": "[concat(variables('webTierVmName'),'-', copyindex(1),'_OSDisk')]",
                "createOption": "FromImage",
                "managedDisk": 
                {
                  "storageAccountType": "[variables('vmStorageAccountType')]"
                }
              }
            },
            "networkProfile": 
            {
              "networkInterfaces": 
              [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('webTierVmNicName'), copyindex(1)))]"
                }
              ]
            },
            "diagnosticsProfile": 
            {
              "bootDiagnostics": 
              {
                "enabled": true,
                "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('diagStorageAccountName'))).primaryEndpoints.blob]"
              }
            }
          }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('appTierVmName'),'-', copyindex(1))]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "comments": " App Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'),'2')]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('appTierVmNicName'), copyindex(1))]",
            "[concat('Microsoft.Compute/availabilitySets/',variables('availSetName'),'2')]"
          ],
          "copy": 
          {
            "name": "AppTierVMLoop",
            "count": "[parameters('appTierVmCount')]"
          },
          "properties": 
          {
            "availabilitySet": 
            {
              "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(variables('availSetName'),'2'))]"
            },
            "hardwareProfile": 
            {
              "vmSize": "[variables('vmSize')]"
            },
            "osProfile": 
            {
              "computerName": "[concat('appserver',copyindex(1))]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]",
              "windowsConfiguration": 
              {
                "enableAutomaticUpdates": true,
                "provisionVmAgent": true
              }
            },
            "storageProfile": 
            {
              "imageReference": 
              {
                "publisher": "[variables('Publisher')]",
                "offer": "[variables('Offer')]",
                "sku": "[variables('windowssku')]",
                "version": "latest"
              },
              "osDisk": 
              {
                "name": "[concat(variables('webTierVmName'),'-', copyindex(1),'_OSDisk')]",
                "createOption": "FromImage",
                "managedDisk": 
                {
                  "storageAccountType": "[variables('vmStorageAccountType')]"
                }
              }
            },
            "networkProfile": 
            {
              "networkInterfaces": 
              [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('appTierVmNicName'), copyindex(1)))]"
                }
              ]
            },
            "diagnosticsProfile": 
            {
              "bootDiagnostics": 
              {
                "enabled": true,
                "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('diagStorageAccountName'))).primaryEndpoints.blob]"
              }
            }
          }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('databaseTierVmName'),'-', copyindex(1))]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "comments": "Database Tier VMs",
          "dependsOn": 
          [
            "[concat('Microsoft.Storage/storageAccounts/', variables('vmStorageAccountName'),'3')]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('databaseTierVmNicName'), copyindex(1))]",
            "[concat('Microsoft.Compute/availabilitySets/', variables('availSetName'),'3')]"
          ],
          "copy": 
          {
            "name": "DatabaseTierVMLoop",
            "count": "[parameters('databaseTierVmCount')]"
          },
          "properties": 
          {
            "availabilitySet": 
            {
              "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(variables('availSetName'),'3'))]"
            },
            "hardwareProfile": 
            {
              "vmSize": "[variables('vmSize')]"
            },
            "osProfile": 
            {
              "computerName": "[concat('databaseserver',copyindex(1))]",
              "adminUsername": "[parameters('adminUsername')]",
              "adminPassword": "[parameters('adminPassword')]",
              "windowsConfiguration": 
              {
                "enableAutomaticUpdates": true,
                "provisionVmAgent": true
              }
            },
            "storageProfile": 
            {
              "imageReference": 
              {
                "publisher": "[variables('Publisher')]",
                "offer": "[variables('Offer')]",
                "sku": "[variables('windowssku')]",
                "version": "latest"
              },
              "osDisk": 
              {
                "name": "[concat(variables('webTierVmName'),'-', copyindex(1),'_OSDisk')]",
                "createOption": "FromImage",
                "managedDisk": 
                {
                  "storageAccountType": "[variables('vmStorageAccountType')]"
                }
              }
            },
            "networkProfile": 
            {
              "networkInterfaces": 
              [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('databaseTierVmNicName'), copyindex(1)))]"
                }
              ]
            },
            "diagnosticsProfile": 
            {
              "bootDiagnostics": 
              {
                "enabled": true,
                "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('diagStorageAccountName'))).primaryEndpoints.blob]"
              }
            }
          }
        }
    ],
  "outputs": 
  {
    "webLoadBalancerIP": 
    {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('weblbIPAddressName'))).ipAddress]"
    },
    "webLoadBalancerFqdn": 
    {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('weblbIPAddressName'))).dnsSettings.fqdn]"
    }
  }
}